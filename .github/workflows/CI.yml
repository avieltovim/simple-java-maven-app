# This workflow will build a docker image running the Java app, test it,
# push it to DockerHub repo, and trigger a PR to Master branch.


name: ci

on:
  push:
    branches:
      - 'development'

#permissions:
     # contents: read
      #packages: write

jobs:

  test_with_maven:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name:  test with Maven
        run: mvn --batch-mode --update-snapshots test

  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: avieltovim/java-app:test

  bump_patch_version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          # cache: maven
      - name:  Bump patch version with Maven
        run: mvn --batch-mode --update-snapshots -DbumpPatch validate
      - name: Push back to repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_COMMIT_MESSAGE: Updated patch version in pom.xml
          CI_COMMIT_AUTHOR: CI workflow
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git add pom.xml
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push

