# This workflow will build a docker image running the Java app, test it,
# push it to DockerHub repo, and trigger a PR to Master branch.


name: ci

on:
  push:
    branches:
      - 'development'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#permissions:
     # contents: read
      #packages: write

jobs:

  test_with_maven:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name:  test with Maven
        run: mvn --batch-mode --update-snapshots test

  docker:
    needs: test_with_maven
    runs-on: ubuntu-latest

    outputs:
      github_tag: ${{ steps.patch_tag.outputs.new_tag }}

    steps:
      #-
        #name: Set up QEMU
        #uses: docker/setup-qemu-action@v2
      -
        # Allows building multi-platform images, export cache, etc.
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          load: true
          tags: avieltovim/java-app:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Test
        run: |
          [ "$(docker run --rm avieltovim/java-app:test)" == "Hello World!" ] || exit 1
      - uses: actions/checkout@v3
      -
        name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      -
        name:  Bump patch version with Maven
        run: mvn --batch-mode --update-snapshots -DbumpPatch validate
      -
        name: Push back to repo
        env:
          CI_COMMIT_MESSAGE: Updated patch version in pom.xml
          CI_COMMIT_AUTHOR: CI workflow
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "avieltovim@gmail.com"
          git add pom.xml
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
      -
        name: Get project version
        id: get-version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          version=$(echo "$version" | sed 's/"//g')
          echo "PROJECT_VERSION=$version" >> $GITHUB_ENV
      -
        name: Bump version and push tag
        id: patch_tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.20
          DEFAULT_BUMP: patch
        with:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          release_branches: 'master'

      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          #platforms: linux/amd64,linux/arm64
          push: true
          tags: avieltovim/java-app:${{ env.PROJECT_VERSION }}


  open_pr:
    needs: [test_with_maven, docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create pull request
        run: |
          git checkout -b ${{ needs.docker.outputs.github_tag }}
          gh pr create -B master -H ${{ needs.docker.outputs.github_tag }} --title 'Merge new patch to production' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
